# Based on https://github.com/samoshkin/tmux-config
# Modified to fit my own preferences

#  Sets $TERM
set -g default-terminal 'screen-256color'
set -ga terminal-overrides ',*:Tc' # this is for 256 color
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q' # this is for the cursor shape

# Max number of lines per window (default is 2k)
set -g history-limit 20000

set -g buffer-limit 20

# Time in millis that tmux waits to determine if an escape is part of a function or meta key sequence.
# Default is 500ms.
set -sg escape-time 0

# Number of milliseconds that a status line message is displayed
set -g display-time 1500

# Close panes when the program running in them exits
set -g remain-on-exit off

# Allows multiple commands to run quickly without pressing prefix again
set -g repeat-time 300

# Prevent programs from renaming windows
setw -g allow-rename off

# Don't allow programs to rename windows.
# You can enable this and uncomment the next line to name windows after the current command being
# executed.
setw -g automatic-rename off
# setw -g automatic-rename-format "#{pane_current_command}"

setw -g aggressive-resize on

# Set prefix to C-a
unbind C-b
set-option -g prefix C-a

# Reload tmux config
bind C-r source-file ~/.tmux.conf \; display-message "Tmux config reloaded"

# Start counting windows at 1, because it's the first number on the keyboard
set -g base-index 1

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"

# Mouse support
set -g mouse on


# ============
# Key bindings
# ============

# Unbind default key bindings, we're going to override
unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
unbind "\}" # swap-pane -D
unbind "\{" # swap-pane -U
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
unbind &    # kill-window
unbind "#"  # list-buffer 
unbind =    # choose-buffer
unbind z    # zoom-pane
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left

# New window
bind c new-window -c "#{pane_current_path}"

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Split window
bind-key v split-window -h -c "#{pane_current_path}"
bind-key h split-window -v -c "#{pane_current_path}"

# Even sizes of panes
bind-key + select-layout even-vertical
bind-key = select-layout even-horizontal

# Resize panes
bind-key -n C-S-Down resize-pane -D 5
bind-key -n C-S-Up resize-pane -U 5
bind-key -n C-S-Left resize-pane -L 5
bind-key -n C-S-Right resize-pane -R 5

# Switch between panes and splits in Vim the same way.
# Requires christoomey/vim-tmux-navigator plugin in Vim.
setw -g mode-keys vi

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# Switch windows without prefix
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# Copy to clipboard on MacOS
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

#
# Visual/design changes
#

# don't change the window status when activity happens
set-option -g monitor-activity off
set-option -g monitor-silence 0 
set-option -g bell-action none

# Info on left (I don't have a session display for now)
set -g status-left ''

# The modes
setw -g clock-mode-colour colour135
setw -g mode-style fg=colour196,bg=colour238,bold

# The panes
set -g pane-border-style bg=colour235,fg=colour238
set -g pane-active-border-style bg=colour236

# The statusbar
set -g status-position bottom
set -g status-style dim,bg=colour234,fg=colour137
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %m/%d #[fg=colour233,bg=colour245,bold] %I:%M '
set -g status-right-length 50
set -g status-left-length 20
set -g clock-mode-style 12
setw -g window-status-current-style bold,fg=colour81,bg=colour238
setw -g window-status-current-format ' #I #[fg=colour255]#(basename #{pane_current_path})#[fg=colour250]:#[fg=colour255]#W '
setw -g window-status-style none,fg=colour138,bg=colour235
setw -g window-status-format ' #I#[fg=colour237] #[fg=colour250]#(basename #{pane_current_path})#[fg=colour244]:#[fg=colour250]#W '
setw -g window-status-bell-style bold,fg=colour255,bg=colour1

# The messages
set -g message-style bold,fg=colour232,bg=colour166
